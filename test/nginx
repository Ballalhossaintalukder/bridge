# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
	worker_connections  1024;
}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					  '$status $body_bytes_sent "$http_referer" '
					  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/nginx/access.log  main;
	passenger_root /usr/share/ruby/vendor_ruby/phusion_passenger/locations.ini;
	passenger_ruby /usr/bin/ruby;
	passenger_python /usr/bin/python3;
	passenger_nodejs /usr/bin/node;
	passenger_friendly_error_pages on;
	passenger_disable_security_update_check on;
	passenger_disable_anonymous_telemetry on;
	passenger_instance_registry_dir /var/run/passenger-instreg;

	gzip_types text/css application/javascript image/svg+xml;
	gzip_min_length 1024;
	gzip_comp_level 3;
	gzip on;

	sendfile			on;
	tcp_nopush		  on;
	tcp_nodelay		 on;
	keepalive_timeout   60;
	keepalive_requests 1000;
	types_hash_max_size 2048;
	directio			 16m;
	output_buffers	3 512k;
	client_max_body_size 512m;
	proxy_http_version 1.1;
	ssl_protocols TLSv1.2 TLSv1.3;
	server_tokens off;
	merge_slashes off;
	ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
	ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
	ssl_session_tickets off;
	ssl_early_data on;
	# ssl_stapling on;
	# ssl_stapling_verify on;
	# resolver 8.8.8.8 8.8.4.4 valid=300s;
	# resolver_timeout 5s;
	ssl_buffer_size 4k;
	server_names_hash_bucket_size 128;

	include	   /usr/local/conf/mime.types;
	default_type  application/octet-stream;

	# Load modular configuration files from the /etc/nginx/conf.d directory.
	# See http://nginx.org/en/docs/ngx_core_module.html#include
	# for more information.
	include /etc/nginx/conf.d/*.conf;

	proxy_set_header Early-Data $ssl_early_data;
	fastcgi_param GATEWAY_INTERFACE CGI/1.1;
	fastcgi_param SERVER_SOFTWARE nginx;
	fastcgi_param QUERY_STRING $query_string;
	fastcgi_param REQUEST_METHOD $request_method;
	fastcgi_param CONTENT_TYPE $content_type;
	fastcgi_param CONTENT_LENGTH $content_length;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_param SCRIPT_NAME $fastcgi_script_name;
	fastcgi_param REQUEST_URI $request_uri;
	fastcgi_param DOCUMENT_URI $document_uri;
	fastcgi_param DOCUMENT_ROOT $document_root;
	fastcgi_param SERVER_PROTOCOL $server_protocol;
	fastcgi_param REMOTE_ADDR $remote_addr;
	fastcgi_param REMOTE_PORT $remote_port;
	fastcgi_param SERVER_ADDR $server_addr;
	fastcgi_param SERVER_PORT $server_port;
	fastcgi_param SERVER_NAME $server_name;
	fastcgi_param PATH_INFO $fastcgi_path_info;
	fastcgi_param HTTPS $https;
	fastcgi_split_path_info ^(.+\.php)(/.+)$;

	map $sent_http_content_type $expires {
		default					off;
		text/html				  epoch;
		text/css				   max;
		application/javascript	 max;
		~image/					max;
		~font/					 max;
	}

	expires $expires;

	server {
		server_name _;
		listen 1.2.3.4;
		listen [1:2:3:4::5:6];
		return 301 https://$host$request_uri;
	}

	server {
		server_name example.com;
		listen 1.2.3.4;
		listen [1:2:3:4::5:6];
		root /home/example/public_html;
		index index.html index.htm index.php;
		access_log /var/log/virtualmin/example.com_access_log;
		error_log /var/log/virtualmin/example.com_error_log;
		fastcgi_param GATEWAY_INTERFACE CGI/1.1;
		fastcgi_param SERVER_SOFTWARE nginx;
		fastcgi_param QUERY_STRING $query_string;
		fastcgi_param REQUEST_METHOD $request_method;
		fastcgi_param CONTENT_TYPE $content_type;
		fastcgi_param CONTENT_LENGTH $content_length;
		fastcgi_param SCRIPT_FILENAME /home/example/public_html$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_param REQUEST_URI $request_uri;
		fastcgi_param DOCUMENT_URI $document_uri;
		fastcgi_param DOCUMENT_ROOT /home/example/public_html;
		fastcgi_param SERVER_PROTOCOL $server_protocol;
		fastcgi_param REMOTE_ADDR $remote_addr;
		fastcgi_param REMOTE_PORT $remote_port;
		fastcgi_param SERVER_ADDR $server_addr;
		fastcgi_param SERVER_PORT $server_port;
		fastcgi_param SERVER_NAME $server_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS $https;

		location ~ \.php$ {
			try_files $uri =404;
			fastcgi_pass localhost:8004;
		}

		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		listen 1.2.3.4:443 ssl http2;
		listen [1:2:3:4::5:6]:443 ssl http2;
		ssl_certificate /home/example/ssl.combined;
		ssl_certificate_key /home/example/ssl.key;
	}

	server {
		server_name complex.net;
		listen 1.2.3.4;
		listen [1:2:3:4::5:6];
		root /home/complex/public_html/public;
		index index.html index.htm index.php;
		access_log /var/log/virtualmin/complex.net_access_log;
		error_log /var/log/virtualmin/complex.net_error_log;
		location /phpmyadmin/ {
   			 root /home/complex/public_html/;
			location ~ \.php(/|$) {
				try_files $uri =404;
				fastcgi_pass localhost:8013;
			}
  		}
		location /phppgadmin/ {
			root /home/complex/public_html/;
			location ~ \.php(/|$) {
				try_files $uri =404;
				fastcgi_pass localhost:8013;
			}
		}
  	  	location /webssh/ {
			root /home/complex/public_html/webssh/webssh/static;
			passenger_app_root /home/complex/public_html/webssh;
			passenger_enabled on;
			passenger_app_start_command "python run.py --port=$PORT";
			passenger_base_uri "/webssh";
			rewrite ^/webssh/(.*)$ /$1 break;
			passenger_document_root /home/complex/public_html/webssh/webssh/static;
		}
		location ~ \.php(/|$) {
			try_files $uri =404;
			fastcgi_pass localhost:8013;
		}
		listen 1.2.3.4:443 ssl http2;
		listen [1:2:3:4::5:6]:443 ssl http2;
		ssl_certificate /home/complex/ssl.combined;
		ssl_certificate_key /home/complex/ssl.key;
	}
}

